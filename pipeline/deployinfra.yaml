parameters:
  - name: tfStorageAccountRG
    type: string

  - name: tfStorageAccount
    type: string

steps:
  - task: AzureCLI@2
    displayName: 'Creating storage for terraform state '
    inputs:
      azureSubscription: 'visual-studio-professional-azure-service-connection'
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: |
        # This is will create storage account and setup for terraform state file
        az group create --location australiasoutheast -n '${{parameters.tfStorageAccountRG}}'
        az storage account create -n '${{parameters.tfStorageAccount}}' -g '${{parameters.tfStorageAccountRG}}' -l australiasoutheast --sku Standard_LRS
        az storage container create -n terraform --account-name '${{parameters.tfStorageAccount}}'

  - task: AzurePowerShell@5
    displayName: 'Updating storage key variable runtime'
    inputs:
      azureSubscription: 'visual-studio-professional-azure-service-connection'
      ScriptType: InlineScript
      Inline: |
        # Use the key we will fetch storage key which is required to authenticate backend storage account
        Enable-AzureRmAlias
        $key = (Get-AzureRmStorageAccountKey -ResourceGroupName '${{parameters.tfStorageAccountRG}}' -AccountName '${{parameters.tfStorageAccount}}').Value[0]
         Write-Host "##vso[task.setvariable variable=terraformStorageKey]$key"
      azurePowerShellVersion: LatestVersion

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens in *.tf and *.tfvars '
    inputs:
      rootDirectory: '$(Pipeline.Workspace)/terraform'
      targetFiles: |
         *.tf
         *.tfvars
      tokenPrefix: '#{' 
      tokenSuffix: '}'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform 0.14.7'
    inputs:
      terraformVersion: 0.14.7

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : Init'
    inputs:
      workingDirectory: '$(Pipeline.Workspace)/terraform'
      backendServiceArm: 'visual-studio-professional-azure-service-connection'
      backendAzureRmResourceGroupName: ${{parameters.tfStorageAccountRG}}'
      backendAzureRmStorageAccountName: '${{parameters.tfStorageAccount}}'
      backendAzureRmContainerName: terraform
      backendAzureRmKey: terraform.tfstate

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : Plan'
    inputs:
      command: plan
      workingDirectory: '$(Pipeline.Workspace)/terraform'
      commandOptions: '-lock=false'
      environmentServiceNameAzureRM: 'visual-studio-professional-azure-service-connection'

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : apply-auto-approve'
    inputs:
      command: apply
      workingDirectory: '$(Pipeline.Workspace)/terraform'
      commandOptions: '-auto-approve -lock=false'
      environmentServiceNameAzureRM: 'visual-studio-professional-azure-service-connection'
